<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classVectorBase" kind="class" language="C++" prot="public">
    <compoundname>VectorBase</compoundname>
    <derivedcompoundref refid="classVector" prot="public" virt="non-virtual">Vector&lt; T &gt;</derivedcompoundref>
    <includes refid="Vector_8h" local="no">Vector.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" prot="protected" static="no">
        <type>T *</type>
        <definition>typedef T* VectorBase&lt; T &gt;::VectorDataType</definition>
        <argsstring></argsstring>
        <name>VectorDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="130" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classVectorBase_1a48d4c06178c5db41cf94ba76c700c160" prot="protected" static="no" mutable="no">
        <type><ref refid="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" kindref="member">VectorDataType</ref></type>
        <definition>VectorDataType VectorBase&lt; T &gt;::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
<para>allocated data block. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="132" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="132" bodyend="-1"/>
        <referencedby refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" compoundref="Vector_8h" startline="146" endline="154">VectorBase&lt; char &gt;::shiftMem</referencedby>
        <referencedby refid="classVector_1afe2b08eb4e5e6c62a68b9917106217e0" compoundref="Vector_8h" startline="326" endline="326">Vector&lt; float &gt;::Vector</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classVectorBase_1aa9f050339b20a7bb9250650397565502" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* VectorBase&lt; T &gt;::mStart</definition>
        <argsstring></argsstring>
        <name>mStart</name>
        <briefdescription>
<para>start of useful data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="133" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="133" bodyend="-1"/>
        <referencedby refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" compoundref="Vector_8h" startline="193" endline="196">VectorBase&lt; char &gt;::clone</referencedby>
        <referencedby refid="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" compoundref="Vector_8h" startline="238" endline="244">VectorBase&lt; char &gt;::copyToSegment</referencedby>
        <referencedby refid="classBitVector_1a2c8af29c7ac958e0fe666ee1b71fefa8" compoundref="BitVector_8h" startline="268" endline="268">BitVector::dup</referencedby>
        <referencedby refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" compoundref="Vector_8h" startline="157" endline="165">VectorBase&lt; char &gt;::makeAlias</referencedby>
        <referencedby refid="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" compoundref="Vector_8h" startline="258" endline="264">VectorBase&lt; char &gt;::segmentCopyTo</referencedby>
        <referencedby refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" compoundref="Vector_8h" startline="146" endline="154">VectorBase&lt; char &gt;::shiftMem</referencedby>
        <referencedby refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" compoundref="Vector_8h" startline="198" endline="202">VectorBase&lt; char &gt;::vConcat</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classVectorBase_1add8d0a21c1822e058803218d48770580" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* VectorBase&lt; T &gt;::mEnd</definition>
        <argsstring></argsstring>
        <name>mEnd</name>
        <briefdescription>
<para>end of useful data + 1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="134" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" compoundref="Vector_8h" startline="238" endline="244">VectorBase&lt; char &gt;::copyToSegment</referencedby>
        <referencedby refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" compoundref="Vector_8h" startline="157" endline="165">VectorBase&lt; char &gt;::makeAlias</referencedby>
        <referencedby refid="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" compoundref="Vector_8h" startline="258" endline="264">VectorBase&lt; char &gt;::segmentCopyTo</referencedby>
        <referencedby refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" compoundref="Vector_8h" startline="146" endline="154">VectorBase&lt; char &gt;::shiftMem</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classVectorBase_1a531e6d9e1fcc0fd4339274206ba541d2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::vInit</definition>
        <argsstring>(size_t elements)</argsstring>
        <name>vInit</name>
        <param>
          <type>size_t</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="137" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::shiftMem</definition>
        <argsstring>(VectorBase&lt; T &gt; &amp;other)</argsstring>
        <name>shiftMem</name>
        <param>
          <type><ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign from another <ref refid="classVector" kindref="compound">Vector</ref>, shifting ownership. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="146" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::makeAlias</definition>
        <argsstring>(const VectorBase&lt; T &gt; &amp;other)</argsstring>
        <name>makeAlias</name>
        <param>
          <type>const <ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="157" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a7c6c8ed8176b411636e4fa653f98a29b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VectorBase&lt; T &gt;::VectorBase</definition>
        <argsstring>()</argsstring>
        <name>VectorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="206" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1af7bdb68e08f619d29846929ea1885ea7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VectorBase&lt; T &gt;::VectorBase</definition>
        <argsstring>(VectorDataType wData, T *wStart, T *wEnd)</argsstring>
        <name>VectorBase</name>
        <param>
          <type><ref refid="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" kindref="member">VectorDataType</ref></type>
          <declname>wData</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>wStart</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>wEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classVector" kindref="compound">Vector</ref> with explicit values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="209" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="209" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classVectorBase_1a36a7ecb20b19da9fcfaaf41b1c1ca110" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t VectorBase&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the size of the <ref refid="classVector" kindref="compound">Vector</ref> in units, ie, the number of T elements. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="170" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="170" bodyend="175"/>
        <referencedby refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" compoundref="Vector_8h" startline="193" endline="196">VectorBase&lt; char &gt;::clone</referencedby>
        <referencedby refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" compoundref="Vector_8h" startline="198" endline="202">VectorBase&lt; char &gt;::vConcat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a0b5eb3427d4e28d960bfa140fd1f98d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t VectorBase&lt; T &gt;::bytes</definition>
        <argsstring>() const </argsstring>
        <name>bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return size in bytes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="178" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="178" bodyend="178"/>
        <referencedby refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" compoundref="Vector_8h" startline="193" endline="196">VectorBase&lt; char &gt;::clone</referencedby>
        <referencedby refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" compoundref="Vector_8h" startline="198" endline="202">VectorBase&lt; char &gt;::vConcat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1aeae2d4640f8b2f6e560e443095c931b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::resize</definition>
        <argsstring>(size_t newElements)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>newElements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Change the size of the <ref refid="classVector" kindref="compound">Vector</ref> in items (not bytes), discarding content. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="181" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1aa1795443685ec33af86e2e2ce9f95949" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release memory and clear pointers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="189" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::clone</definition>
        <argsstring>(const VectorBase&lt; T &gt; &amp;other)</argsstring>
        <name>clone</name>
        <param>
          <type>const <ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy data from another vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="193" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="193" bodyend="196"/>
        <referencedby refid="classBitVector_1a814c9dcdf9bed756d1017c243b8626b7" compoundref="BitVector_8h" startline="174" endline="182">BitVector::cloneSegment</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::vConcat</definition>
        <argsstring>(const VectorBase&lt; T &gt; &amp;other1, const VectorBase&lt; T &gt; &amp;other2)</argsstring>
        <name>vConcat</name>
        <param>
          <type>const <ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other1</declname>
        </param>
        <param>
          <type>const <ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="198" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ae71e18c840eb2e3f70c2778021684926" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>VectorBase&lt; T &gt;::~VectorBase</definition>
        <argsstring>()</argsstring>
        <name>~VectorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a <ref refid="classVector" kindref="compound">Vector</ref>, deleting held memory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="217" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="217" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ac1eb63ccdf1b4be113bae8a0c99cd0b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool VectorBase&lt; T &gt;::isOwner</definition>
        <argsstring>()</argsstring>
        <name>isOwner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="223" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1afda04355a4b03952ecaf35a84f0848f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string VectorBase&lt; T &gt;::inspect</definition>
        <argsstring>() const </argsstring>
        <name>inspect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="225" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::copyToSegment</definition>
        <argsstring>(VectorBase&lt; T &gt; &amp;other, size_t start, size_t span) const </argsstring>
        <name>copyToSegment</name>
        <param>
          <type><ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy part of this <ref refid="classVector" kindref="compound">Vector</ref> to a segment of another <ref refid="classVector" kindref="compound">Vector</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start point in the other vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="238" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="238" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1aa9b7f34c65a190fe9312f70e94a2a3f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::copyToSegment</definition>
        <argsstring>(VectorBase&lt; T &gt; &amp;other, size_t start=0) const </argsstring>
        <name>copyToSegment</name>
        <param>
          <type><ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy all of this <ref refid="classVector" kindref="compound">Vector</ref> to a segment of another <ref refid="classVector" kindref="compound">Vector</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="247" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="247" bodyend="247"/>
        <referencedby refid="classVectorBase_1aa9b7f34c65a190fe9312f70e94a2a3f6" compoundref="Vector_8h" startline="247" endline="247">VectorBase&lt; char &gt;::copyToSegment</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a7ce39594091d3182f77af9bb679751a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::copyTo</definition>
        <argsstring>(VectorBase&lt; T &gt; &amp;other) const </argsstring>
        <name>copyTo</name>
        <param>
          <type><ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="249" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::segmentCopyTo</definition>
        <argsstring>(VectorBase&lt; T &gt; &amp;other, size_t start, size_t span) const </argsstring>
        <name>segmentCopyTo</name>
        <param>
          <type><ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy a segment of this vector into another. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other vector (to copt into starting at 0.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The start point in this vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>span</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements to copy. WARNING: This function does NOT resize the result - you must set the result size before entering. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="258" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="258" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ad295fc6bec782f63e87ca211a136f224" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::fill</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>fill</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="266" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="266" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a37b10c473d41a160da22b32d9426105b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::fill</definition>
        <argsstring>(const T &amp;val, unsigned start, unsigned length)</argsstring>
        <name>fill</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>start</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="272" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="272" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a0f878c012131a702f4464e13291c2301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VectorBase&lt; T &gt;::operator=</definition>
        <argsstring>(const VectorBase&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classVectorBase" kindref="compound">VectorBase</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign from another <ref refid="classVector" kindref="compound">Vector</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="283" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="283" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1a7764f9c76d4eb8e040baa0ae04b813b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; VectorBase&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="294" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="294" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1acb6769d7ac9b08634c366d92a6f4763f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; VectorBase&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="300" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="300" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1aa8bf686129f0bb6e4eb20f8c0b54c6b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* VectorBase&lt; T &gt;::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="306" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="306" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ae5703f5dc5374229423cda1bc726a464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* VectorBase&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="307" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ae1cbe6fa0539e61770234a47da97bceb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* VectorBase&lt; T &gt;::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="308" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1ad20f22dd4eae512df91c1d5147070d35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* VectorBase&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="309" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="309" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classVectorBase_1adba2e683e7b9ad36fefdb802d755282e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* VectorBase&lt; T &gt;::getData</definition>
        <argsstring>() const </argsstring>
        <name>getData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="313" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="313" bodyend="313"/>
        <referencedby refid="classBitVector_1a48841e9d606c7c0fe2ec73a9366e2364" compoundref="BitVector_8h" startline="130" endline="137">BitVector::BitVector</referencedby>
        <referencedby refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" compoundref="Vector_8h" startline="157" endline="165">VectorBase&lt; char &gt;::makeAlias</referencedby>
        <referencedby refid="classVectorBase_1a0f878c012131a702f4464e13291c2301" compoundref="Vector_8h" startline="283" endline="291">VectorBase&lt; char &gt;::operator=</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A simplified <ref refid="classVector" kindref="compound">Vector</ref> template with aliases. Unlike std::vector, this class does not support dynamic resizing. Unlike std::vector, this class does support &quot;aliases&quot; and subvectors. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="875">
        <label>Vector&lt; T &gt;</label>
        <link refid="classVector"/>
        <childnode refid="874" relation="public-inheritance">
        </childnode>
      </node>
      <node id="874">
        <label>VectorBase&lt; T &gt;</label>
        <link refid="classVectorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="877">
        <label>T</label>
      </node>
      <node id="876">
        <label>VectorBase&lt; T &gt;</label>
        <link refid="classVectorBase"/>
        <childnode refid="877" relation="usage">
          <edgelabel>mData</edgelabel>
          <edgelabel>mEnd</edgelabel>
          <edgelabel>mStart</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="123" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="122" bodyend="315"/>
    <listofallmembers>
      <member refid="classVectorBase_1aa8bf686129f0bb6e4eb20f8c0b54c6b4" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>begin</name></member>
      <member refid="classVectorBase_1ae5703f5dc5374229423cda1bc726a464" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>begin</name></member>
      <member refid="classVectorBase_1a0b5eb3427d4e28d960bfa140fd1f98d5" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>bytes</name></member>
      <member refid="classVectorBase_1aa1795443685ec33af86e2e2ce9f95949" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>clear</name></member>
      <member refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>clone</name></member>
      <member refid="classVectorBase_1a7ce39594091d3182f77af9bb679751a9" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>copyTo</name></member>
      <member refid="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>copyToSegment</name></member>
      <member refid="classVectorBase_1aa9b7f34c65a190fe9312f70e94a2a3f6" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>copyToSegment</name></member>
      <member refid="classVectorBase_1ae1cbe6fa0539e61770234a47da97bceb" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>end</name></member>
      <member refid="classVectorBase_1ad20f22dd4eae512df91c1d5147070d35" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>end</name></member>
      <member refid="classVectorBase_1ad295fc6bec782f63e87ca211a136f224" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>fill</name></member>
      <member refid="classVectorBase_1a37b10c473d41a160da22b32d9426105b" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>fill</name></member>
      <member refid="classVectorBase_1adba2e683e7b9ad36fefdb802d755282e" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>getData</name></member>
      <member refid="classVectorBase_1afda04355a4b03952ecaf35a84f0848f7" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>inspect</name></member>
      <member refid="classVectorBase_1ac1eb63ccdf1b4be113bae8a0c99cd0b6" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>isOwner</name></member>
      <member refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>makeAlias</name></member>
      <member refid="classVectorBase_1a48d4c06178c5db41cf94ba76c700c160" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>mData</name></member>
      <member refid="classVectorBase_1add8d0a21c1822e058803218d48770580" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>mEnd</name></member>
      <member refid="classVectorBase_1aa9f050339b20a7bb9250650397565502" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>mStart</name></member>
      <member refid="classVectorBase_1a0f878c012131a702f4464e13291c2301" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>operator=</name></member>
      <member refid="classVectorBase_1a7764f9c76d4eb8e040baa0ae04b813b3" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1acb6769d7ac9b08634c366d92a6f4763f" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1aeae2d4640f8b2f6e560e443095c931b6" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>resize</name></member>
      <member refid="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>segmentCopyTo</name></member>
      <member refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>shiftMem</name></member>
      <member refid="classVectorBase_1a36a7ecb20b19da9fcfaaf41b1c1ca110" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>size</name></member>
      <member refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>vConcat</name></member>
      <member refid="classVectorBase_1a7c6c8ed8176b411636e4fa653f98a29b" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1af7bdb68e08f619d29846929ea1885ea7" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>VectorDataType</name></member>
      <member refid="classVectorBase_1a531e6d9e1fcc0fd4339274206ba541d2" prot="protected" virt="non-virtual"><scope>VectorBase</scope><name>vInit</name></member>
      <member refid="classVectorBase_1ae71e18c840eb2e3f70c2778021684926" prot="public" virt="non-virtual"><scope>VectorBase</scope><name>~VectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
