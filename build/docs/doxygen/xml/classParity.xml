<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classParity" kind="class" language="C++" prot="public">
    <compoundname>Parity</compoundname>
    <basecompoundref refid="classGenerator" prot="public" virt="non-virtual">Generator</basecompoundref>
    <includes refid="BitVector_8h" local="no">BitVector.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classParity_1a1c38550642519cd4027d2e6807f7caeb" prot="protected" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned Parity::mCodewordSize</definition>
        <argsstring></argsstring>
        <name>mCodewordSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="101" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classParity_1aeee39670a00c1a6a1a80240ecaa66bb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Parity::Parity</definition>
        <argsstring>(uint64_t wCoefficients, unsigned wParitySize, unsigned wCodewordSize)</argsstring>
        <name>Parity</name>
        <param>
          <type>uint64_t</type>
          <declname>wCoefficients</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>wParitySize</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>wCodewordSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="105" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classParity_1ad0bdccf5e0107361d2dd197162476000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Parity::writeParityWord</definition>
        <argsstring>(const BitVector &amp;data, BitVector &amp;parityWordTarget, bool invert=true)</argsstring>
        <name>writeParityWord</name>
        <param>
          <type>const <ref refid="classBitVector" kindref="compound">BitVector</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classBitVector" kindref="compound">BitVector</ref> &amp;</type>
          <declname>parityWordTarget</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>invert</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the parity word and write it into the target segment. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classParity_1a090ed5821de782d45e208a96cc249110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t Parity::syndrome</definition>
        <argsstring>(const BitVector &amp;receivedCodeword)</argsstring>
        <name>syndrome</name>
        <param>
          <type>const <ref refid="classBitVector" kindref="compound">BitVector</ref> &amp;</type>
          <declname>receivedCodeword</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the syndrome of a received sequence. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classParity" kindref="compound">Parity</ref> (CRC-type) generator and checker based on a <ref refid="classGenerator" kindref="compound">Generator</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="755">
        <label>Generator</label>
        <link refid="classGenerator"/>
      </node>
      <node id="754">
        <label>Parity</label>
        <link refid="classParity"/>
        <childnode refid="755" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="757">
        <label>Generator</label>
        <link refid="classGenerator"/>
      </node>
      <node id="756">
        <label>Parity</label>
        <link refid="classParity"/>
        <childnode refid="757" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="97" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="97" bodyend="115"/>
    <listofallmembers>
      <member refid="classGenerator_1a785520f8fdfb2f7394ed414d21ae847a" prot="public" virt="non-virtual"><scope>Parity</scope><name>clear</name></member>
      <member refid="classGenerator_1a927df3986f8d2868201623ee471e5861" prot="public" virt="non-virtual"><scope>Parity</scope><name>encoderShift</name></member>
      <member refid="classGenerator_1afb6553ab338466e309e146a7a6c2da81" prot="public" virt="non-virtual"><scope>Parity</scope><name>Generator</name></member>
      <member refid="classParity_1a1c38550642519cd4027d2e6807f7caeb" prot="protected" virt="non-virtual"><scope>Parity</scope><name>mCodewordSize</name></member>
      <member refid="classParity_1aeee39670a00c1a6a1a80240ecaa66bb7" prot="public" virt="non-virtual"><scope>Parity</scope><name>Parity</name></member>
      <member refid="classGenerator_1a2a3045f4457fa40af19c027a9bd41dbc" prot="public" virt="non-virtual"><scope>Parity</scope><name>size</name></member>
      <member refid="classGenerator_1a4d567ef8e13e05ccef9a4a29999cb2d4" prot="public" virt="non-virtual"><scope>Parity</scope><name>state</name></member>
      <member refid="classParity_1a090ed5821de782d45e208a96cc249110" prot="public" virt="non-virtual"><scope>Parity</scope><name>syndrome</name></member>
      <member refid="classGenerator_1a37a68fd0bfe9b5f89a6351a5ac6de637" prot="public" virt="non-virtual"><scope>Parity</scope><name>syndromeShift</name></member>
      <member refid="classParity_1ad0bdccf5e0107361d2dd197162476000" prot="public" virt="non-virtual"><scope>Parity</scope><name>writeParityWord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
