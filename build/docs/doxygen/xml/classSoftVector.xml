<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classSoftVector" kind="class" language="C++" prot="public">
    <compoundname>SoftVector</compoundname>
    <basecompoundref refid="classVector" prot="public" virt="non-virtual">Vector&lt; float &gt;</basecompoundref>
    <includes refid="BitVector_8h" local="no">BitVector.h</includes>
      <sectiondef kind="user-defined">
      <header>Casts and overrides of Vector operators.</header>
      <memberdef kind="function" id="classSoftVector_1a80481bb71aa96be655e21b226cf9a1a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>SoftVector SoftVector::segment</definition>
        <argsstring>(size_t start, size_t span)</argsstring>
        <name>segment</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="369" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="369" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a726fec2b5b445ab139649e57a69e7dc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>SoftVector SoftVector::alias</definition>
        <argsstring>()</argsstring>
        <name>alias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="377" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="377" bodyend="378"/>
        <references refid="classGenerator_1a2a3045f4457fa40af19c027a9bd41dbc" compoundref="BitVector_8h" startline="65" endline="65">Generator::size</references>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a25dda006be048b1bfaa48c70e8ded815" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>const SoftVector SoftVector::segment</definition>
        <argsstring>(size_t start, size_t span) const </argsstring>
        <name>segment</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="380" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="380" bodyend="381"/>
        <references refid="classVector_1aaf4c357405edb5a4eb77ec0a0f4773f7" compoundref="Vector_8h" startline="352" endline="358">Vector&lt; T &gt;::segment</references>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1acb16e334aea7176f5dab55b143535819" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>SoftVector SoftVector::head</definition>
        <argsstring>(size_t span)</argsstring>
        <name>head</name>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="383" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1abd7d3bd3d5f3e1547e43a1aec3ccae08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>const SoftVector SoftVector::head</definition>
        <argsstring>(size_t span) const </argsstring>
        <name>head</name>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="384" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1af849e69cd4ad38cc4083cdcfecfd079e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>SoftVector SoftVector::tail</definition>
        <argsstring>(size_t start)</argsstring>
        <name>tail</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="385" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="385" bodyend="385"/>
        <references refid="classGenerator_1a2a3045f4457fa40af19c027a9bd41dbc" compoundref="BitVector_8h" startline="65" endline="65">Generator::size</references>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ab837d4f25771ad8912d0eca9b21870ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classSoftVector" kindref="compound">SoftVector</ref></type>
        <definition>const SoftVector SoftVector::tail</definition>
        <argsstring>(size_t start) const </argsstring>
        <name>tail</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="386" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="386" bodyend="386"/>
        <references refid="classGenerator_1a2a3045f4457fa40af19c027a9bd41dbc" compoundref="BitVector_8h" startline="65" endline="65">Generator::size</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classSoftVector_1a610847bceac1ffed5a2d6d5e22403b28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(size_t wSize=0)</argsstring>
        <name>SoftVector</name>
        <param>
          <type>size_t</type>
          <declname>wSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classSoftVector" kindref="compound">SoftVector</ref> of a given length. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="338" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="338" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ae70bc8d97ab73510bbc6070c5835aa2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(const char *valString)</argsstring>
        <name>SoftVector</name>
        <param>
          <type>const char *</type>
          <declname>valString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <ref refid="classSoftVector" kindref="compound">SoftVector</ref> from a C string of &quot;0&quot;, &quot;1&quot;, and &quot;X&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="341" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ad7536ec637fea0c60ac1783189be72e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(const BitVector &amp;source)</argsstring>
        <name>SoftVector</name>
        <param>
          <type>const <ref refid="classBitVector" kindref="compound">BitVector</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a <ref refid="classSoftVector" kindref="compound">SoftVector</ref> from a <ref refid="classBitVector" kindref="compound">BitVector</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ac96b2f3a095117b5022cdd369e977eef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(float *wData, unsigned length)</argsstring>
        <name>SoftVector</name>
        <param>
          <type>float *</type>
          <declname>wData</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrap a <ref refid="classSoftVector" kindref="compound">SoftVector</ref> around a block of floats. The block will be delete[]ed upon desctuction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="350" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a040a120f32b8b50cec2991bb131478c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(float *wData, float *wStart, float *wEnd)</argsstring>
        <name>SoftVector</name>
        <param>
          <type>float *</type>
          <declname>wData</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>wStart</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>wEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="354" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a622d5e3220848102f55376f6f109b484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SoftVector::SoftVector</definition>
        <argsstring>(Vector&lt; float &gt; source)</argsstring>
        <name>SoftVector</name>
        <param>
          <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; float &gt;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Casting from a <ref refid="classVector" kindref="compound">Vector&lt;float&gt;</ref>. Note that this is NOT pass-by-reference. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="362" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1adae55c2732942f66c9a03f8b2840e762" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SoftVector::getEnergy</definition>
        <argsstring>(float *low=0) const </argsstring>
        <name>getEnergy</name>
        <param>
          <type>float *</type>
          <declname>low</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a367e3baac5a0fb76e0124bdae15a4948" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float SoftVector::getSNR</definition>
        <argsstring>() const </argsstring>
        <name>getSNR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a6576582835387d17b9907305bd52fb92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SoftVector::unknown</definition>
        <argsstring>()</argsstring>
        <name>unknown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill with &quot;unknown&quot; values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="396" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ad47bdfd3e6006d9ca349f754c46b48f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SoftVector::bit</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>bit</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a hard bit value from a given index by slicing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="399" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="399" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1af8ad1c09656652b2520cbcab1f27ec2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBitVector" kindref="compound">BitVector</ref></type>
        <definition>BitVector SoftVector::sliced</definition>
        <argsstring>() const </argsstring>
        <name>sliced</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Slice the whole signal into bits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1afb739fe2946f02bfb60ed7b770b1c6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SoftVector::copyUnPunctured</definition>
        <argsstring>(SoftVector &amp;dst, const unsigned *puncture, const size_t plth)</argsstring>
        <name>copyUnPunctured</name>
        <param>
          <type><ref refid="classSoftVector" kindref="compound">SoftVector</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>puncture</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>plth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy to dst, adding in 0.5 for those indexed in puncture. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1a01293d5a9a20a33c1c8b1b7f49d15710" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float SoftVector::softbit</definition>
        <argsstring>(size_t index) const </argsstring>
        <name>softbit</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a soft bit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="413" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="413" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classSoftVector_1ac9365fed4411dd157e9bc2cccf697e57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SoftVector::settfb</definition>
        <argsstring>(size_t index, float value)</argsstring>
        <name>settfb</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a soft bit </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="421" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="421" bodyend="426"/>
        <references refid="BitVector_8h_1ad37333e6d5055802740d5b67ef300d66">operator&lt;&lt;</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classSoftVector" kindref="compound">SoftVector</ref> class is used to represent a soft-decision signal. Values 0..1 represent probabilities that a bit is &quot;true&quot;. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="777">
        <label>SoftVector</label>
        <link refid="classSoftVector"/>
        <childnode refid="778" relation="public-inheritance">
        </childnode>
      </node>
      <node id="779">
        <label>VectorBase&lt; float &gt;</label>
        <link refid="classVectorBase"/>
      </node>
      <node id="778">
        <label>Vector&lt; float &gt;</label>
        <link refid="classVector"/>
        <childnode refid="779" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="780">
        <label>SoftVector</label>
        <link refid="classSoftVector"/>
        <childnode refid="781" relation="public-inheritance">
        </childnode>
      </node>
      <node id="782">
        <label>VectorBase&lt; float &gt;</label>
        <link refid="classVectorBase"/>
      </node>
      <node id="781">
        <label>Vector&lt; float &gt;</label>
        <link refid="classVector"/>
        <childnode refid="782" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" line="333" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/BitVector.h" bodystart="333" bodyend="427"/>
    <listofallmembers>
      <member refid="classSoftVector_1a726fec2b5b445ab139649e57a69e7dc3" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>alias</name></member>
      <member refid="classVectorBase_1aa8bf686129f0bb6e4eb20f8c0b54c6b4" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>begin</name></member>
      <member refid="classVectorBase_1ae5703f5dc5374229423cda1bc726a464" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>begin</name></member>
      <member refid="classSoftVector_1ad47bdfd3e6006d9ca349f754c46b48f9" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>bit</name></member>
      <member refid="classVectorBase_1a0b5eb3427d4e28d960bfa140fd1f98d5" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>bytes</name></member>
      <member refid="classVectorBase_1aa1795443685ec33af86e2e2ce9f95949" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>clear</name></member>
      <member refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>clone</name></member>
      <member refid="classVector_1acbec6290edaeacd3b3b72f39bf910365" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>const_iterator</name></member>
      <member refid="classVectorBase_1a7ce39594091d3182f77af9bb679751a9" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>copyTo</name></member>
      <member refid="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>copyToSegment</name></member>
      <member refid="classVectorBase_1aa9b7f34c65a190fe9312f70e94a2a3f6" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>copyToSegment</name></member>
      <member refid="classSoftVector_1afb739fe2946f02bfb60ed7b770b1c6dc" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>copyUnPunctured</name></member>
      <member refid="classVectorBase_1ae1cbe6fa0539e61770234a47da97bceb" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>end</name></member>
      <member refid="classVectorBase_1ad20f22dd4eae512df91c1d5147070d35" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>end</name></member>
      <member refid="classVectorBase_1ad295fc6bec782f63e87ca211a136f224" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>fill</name></member>
      <member refid="classVectorBase_1a37b10c473d41a160da22b32d9426105b" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>fill</name></member>
      <member refid="classVectorBase_1adba2e683e7b9ad36fefdb802d755282e" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>getData</name></member>
      <member refid="classSoftVector_1adae55c2732942f66c9a03f8b2840e762" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>getEnergy</name></member>
      <member refid="classSoftVector_1a367e3baac5a0fb76e0124bdae15a4948" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>getSNR</name></member>
      <member refid="classSoftVector_1acb16e334aea7176f5dab55b143535819" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>head</name></member>
      <member refid="classSoftVector_1abd7d3bd3d5f3e1547e43a1aec3ccae08" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>head</name></member>
      <member refid="classVectorBase_1afda04355a4b03952ecaf35a84f0848f7" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>inspect</name></member>
      <member refid="classVectorBase_1ac1eb63ccdf1b4be113bae8a0c99cd0b6" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>isOwner</name></member>
      <member refid="classVector_1a30c203480dfd28a0f1fde5c08a68db94" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>iterator</name></member>
      <member refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>makeAlias</name></member>
      <member refid="classVectorBase_1a48d4c06178c5db41cf94ba76c700c160" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>mData</name></member>
      <member refid="classVectorBase_1add8d0a21c1822e058803218d48770580" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>mEnd</name></member>
      <member refid="classVectorBase_1aa9f050339b20a7bb9250650397565502" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>mStart</name></member>
      <member refid="classVector_1a0d4512a03c868e81c1a0f3a3963eff3e" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>operator=</name></member>
      <member refid="classVector_1ae69496b42e6c67a78ff013d5cc050345" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>operator=</name></member>
      <member refid="classVectorBase_1a0f878c012131a702f4464e13291c2301" prot="public" virt="non-virtual" ambiguityscope="VectorBase&lt; float &gt;::"><scope>SoftVector</scope><name>operator=</name></member>
      <member refid="classVectorBase_1a7764f9c76d4eb8e040baa0ae04b813b3" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1acb6769d7ac9b08634c366d92a6f4763f" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1aeae2d4640f8b2f6e560e443095c931b6" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>resize</name></member>
      <member refid="classSoftVector_1a80481bb71aa96be655e21b226cf9a1a6" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>segment</name></member>
      <member refid="classSoftVector_1a25dda006be048b1bfaa48c70e8ded815" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>segment</name></member>
      <member refid="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>segmentCopyTo</name></member>
      <member refid="classSoftVector_1ac9365fed4411dd157e9bc2cccf697e57" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>settfb</name></member>
      <member refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>shiftMem</name></member>
      <member refid="classVectorBase_1a36a7ecb20b19da9fcfaaf41b1c1ca110" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>size</name></member>
      <member refid="classSoftVector_1af8ad1c09656652b2520cbcab1f27ec2b" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>sliced</name></member>
      <member refid="classSoftVector_1a01293d5a9a20a33c1c8b1b7f49d15710" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>softbit</name></member>
      <member refid="classSoftVector_1a610847bceac1ffed5a2d6d5e22403b28" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1ae70bc8d97ab73510bbc6070c5835aa2a" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1ad7536ec637fea0c60ac1783189be72e6" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1ac96b2f3a095117b5022cdd369e977eef" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1a040a120f32b8b50cec2991bb131478c3" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1a622d5e3220848102f55376f6f109b484" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>SoftVector</name></member>
      <member refid="classSoftVector_1af849e69cd4ad38cc4083cdcfecfd079e" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>tail</name></member>
      <member refid="classSoftVector_1ab837d4f25771ad8912d0eca9b21870ca" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>tail</name></member>
      <member refid="classSoftVector_1a6576582835387d17b9907305bd52fb92" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>unknown</name></member>
      <member refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>vConcat</name></member>
      <member refid="classVector_1afbdc34647940ea3ce74ecf7c59eca70a" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVector_1afe2b08eb4e5e6c62a68b9917106217e0" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVector_1ad0ed347210040680329535d7e4d16ae1" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVector_1a0d5ef39ab94f93e30fad24051c395dfb" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVector_1ad8e8c81950a9b01c9fa1741233c0e1a5" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVector_1a60278ebaf99a592297c1c23bbe07938f" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>Vector</name></member>
      <member refid="classVectorBase_1a7c6c8ed8176b411636e4fa653f98a29b" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1af7bdb68e08f619d29846929ea1885ea7" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>VectorDataType</name></member>
      <member refid="classVectorBase_1a531e6d9e1fcc0fd4339274206ba541d2" prot="protected" virt="non-virtual"><scope>SoftVector</scope><name>vInit</name></member>
      <member refid="classVectorBase_1ae71e18c840eb2e3f70c2778021684926" prot="public" virt="non-virtual"><scope>SoftVector</scope><name>~VectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
