<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classVector" kind="class" language="C++" prot="public">
    <compoundname>Vector</compoundname>
    <basecompoundref refid="classVectorBase" prot="public" virt="non-virtual">VectorBase&lt; T &gt;</basecompoundref>
    <includes refid="Vector_8h" local="no">Vector.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classVector_1a0d4512a03c868e81c1a0f3a3963eff3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vector&lt; T &gt;::operator=</definition>
        <argsstring>(Vector&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign from another <ref refid="classVector" kindref="compound">Vector</ref>, shifting ownership. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="346" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ae69496b42e6c67a78ff013d5cc050345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Vector&lt; T &gt;::operator=</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Assign from another <ref refid="classVector" kindref="compound">Vector</ref>, copying. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="349" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="349" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1aaf4c357405edb5a4eb77ec0a0f4773f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; Vector&lt; T &gt;::segment</definition>
        <argsstring>(size_t start, size_t span)</argsstring>
        <name>segment</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an alias to a segment of this <ref refid="classVector" kindref="compound">Vector</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="352" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="352" bodyend="358"/>
        <referencedby refid="classSoftVector_1a25dda006be048b1bfaa48c70e8ded815" compoundref="BitVector_8h" startline="380" endline="381">SoftVector::segment</referencedby>
      </memberdef>
      <memberdef kind="function" id="classVector_1a9e4c8d8612d3b49eade93dd5343c61c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>const Vector&lt;T&gt; Vector&lt; T &gt;::segment</definition>
        <argsstring>(size_t start, size_t span) const </argsstring>
        <name>segment</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an alias to a segment of this <ref refid="classVector" kindref="compound">Vector</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="361" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="361" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a2723ac7c253bddc8e176ae87f2bfe034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; Vector&lt; T &gt;::head</definition>
        <argsstring>(size_t span)</argsstring>
        <name>head</name>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="369" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a648f3b703053aff337a618e0667c24e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>const Vector&lt;T&gt; Vector&lt; T &gt;::head</definition>
        <argsstring>(size_t span) const </argsstring>
        <name>head</name>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="370" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1aebbf63256eae2fe94aec339aee8d111d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>Vector&lt;T&gt; Vector&lt; T &gt;::tail</definition>
        <argsstring>(size_t start)</argsstring>
        <name>tail</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="371" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a35bbc13c024fe22ebfa43f437594903a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt;</type>
        <definition>const Vector&lt;T&gt; Vector&lt; T &gt;::tail</definition>
        <argsstring>(size_t start) const </argsstring>
        <name>tail</name>
        <param>
          <type>size_t</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="372" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="372" bodyend="372"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Iterator types.</header>
      <memberdef kind="typedef" id="classVector_1a30c203480dfd28a0f1fde5c08a68db94" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* Vector&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="376" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classVector_1acbec6290edaeacd3b3b72f39bf910365" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* Vector&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="377" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classVector_1afbdc34647940ea3ce74ecf7c59eca70a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(size_t wSize=0)</argsstring>
        <name>Vector</name>
        <param>
          <type>size_t</type>
          <declname>wSize</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build an empty <ref refid="classVector" kindref="compound">Vector</ref> of a given size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="323" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1afe2b08eb4e5e6c62a68b9917106217e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(Vector&lt; T &gt; &amp;other)</argsstring>
        <name>Vector</name>
        <param>
          <type><ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classVector" kindref="compound">Vector</ref> by shifting the data block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="326" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="326" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ad0ed347210040680329535d7e4d16ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;other)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classVector" kindref="compound">Vector</ref> by copying another. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="329" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="329" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a0d5ef39ab94f93e30fad24051c395dfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(T *wData, T *wStart, T *wEnd)</argsstring>
        <name>Vector</name>
        <param>
          <type>T *</type>
          <declname>wData</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>wStart</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>wEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classVector" kindref="compound">Vector</ref> with explicit values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="332" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1ad8e8c81950a9b01c9fa1741233c0e1a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(T *wStart, size_t span)</argsstring>
        <name>Vector</name>
        <param>
          <type>T *</type>
          <declname>wStart</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a vector from an existing block, NOT to be deleted upon destruction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="335" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classVector_1a60278ebaf99a592297c1c23bbe07938f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Vector&lt; T &gt;::Vector</definition>
        <argsstring>(const Vector&lt; T &gt; &amp;other1, const Vector&lt; T &gt; &amp;other2)</argsstring>
        <name>Vector</name>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other1</declname>
        </param>
        <param>
          <type>const <ref refid="classVector" kindref="compound">Vector</ref>&lt; T &gt; &amp;</type>
          <declname>other2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a <ref refid="classVector" kindref="compound">Vector</ref> by concatenation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="338" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="338" bodyend="341"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="869">
        <label>Vector&lt; T &gt;</label>
        <link refid="classVector"/>
        <childnode refid="870" relation="public-inheritance">
        </childnode>
      </node>
      <node id="870">
        <label>VectorBase&lt; T &gt;</label>
        <link refid="classVectorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="873">
        <label>T</label>
      </node>
      <node id="871">
        <label>Vector&lt; T &gt;</label>
        <link refid="classVector"/>
        <childnode refid="872" relation="public-inheritance">
        </childnode>
      </node>
      <node id="872">
        <label>VectorBase&lt; T &gt;</label>
        <link refid="classVectorBase"/>
        <childnode refid="873" relation="usage">
          <edgelabel>mData</edgelabel>
          <edgelabel>mEnd</edgelabel>
          <edgelabel>mStart</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" line="319" column="1" bodyfile="/home/abhishek/Git/gr-gsm-CE/lib/decoding/Vector.h" bodystart="318" bodyend="381"/>
    <listofallmembers>
      <member refid="classVectorBase_1aa8bf686129f0bb6e4eb20f8c0b54c6b4" prot="public" virt="non-virtual"><scope>Vector</scope><name>begin</name></member>
      <member refid="classVectorBase_1ae5703f5dc5374229423cda1bc726a464" prot="public" virt="non-virtual"><scope>Vector</scope><name>begin</name></member>
      <member refid="classVectorBase_1a0b5eb3427d4e28d960bfa140fd1f98d5" prot="public" virt="non-virtual"><scope>Vector</scope><name>bytes</name></member>
      <member refid="classVectorBase_1aa1795443685ec33af86e2e2ce9f95949" prot="public" virt="non-virtual"><scope>Vector</scope><name>clear</name></member>
      <member refid="classVectorBase_1acbbe83f00dfc704ae4e799c626074c15" prot="public" virt="non-virtual"><scope>Vector</scope><name>clone</name></member>
      <member refid="classVector_1acbec6290edaeacd3b3b72f39bf910365" prot="public" virt="non-virtual"><scope>Vector</scope><name>const_iterator</name></member>
      <member refid="classVectorBase_1a7ce39594091d3182f77af9bb679751a9" prot="public" virt="non-virtual"><scope>Vector</scope><name>copyTo</name></member>
      <member refid="classVectorBase_1a8d7a9b4618d70cb5cae724c26251203c" prot="public" virt="non-virtual"><scope>Vector</scope><name>copyToSegment</name></member>
      <member refid="classVectorBase_1aa9b7f34c65a190fe9312f70e94a2a3f6" prot="public" virt="non-virtual"><scope>Vector</scope><name>copyToSegment</name></member>
      <member refid="classVectorBase_1ae1cbe6fa0539e61770234a47da97bceb" prot="public" virt="non-virtual"><scope>Vector</scope><name>end</name></member>
      <member refid="classVectorBase_1ad20f22dd4eae512df91c1d5147070d35" prot="public" virt="non-virtual"><scope>Vector</scope><name>end</name></member>
      <member refid="classVectorBase_1ad295fc6bec782f63e87ca211a136f224" prot="public" virt="non-virtual"><scope>Vector</scope><name>fill</name></member>
      <member refid="classVectorBase_1a37b10c473d41a160da22b32d9426105b" prot="public" virt="non-virtual"><scope>Vector</scope><name>fill</name></member>
      <member refid="classVectorBase_1adba2e683e7b9ad36fefdb802d755282e" prot="public" virt="non-virtual"><scope>Vector</scope><name>getData</name></member>
      <member refid="classVector_1a2723ac7c253bddc8e176ae87f2bfe034" prot="public" virt="non-virtual"><scope>Vector</scope><name>head</name></member>
      <member refid="classVector_1a648f3b703053aff337a618e0667c24e3" prot="public" virt="non-virtual"><scope>Vector</scope><name>head</name></member>
      <member refid="classVectorBase_1afda04355a4b03952ecaf35a84f0848f7" prot="public" virt="non-virtual"><scope>Vector</scope><name>inspect</name></member>
      <member refid="classVectorBase_1ac1eb63ccdf1b4be113bae8a0c99cd0b6" prot="public" virt="non-virtual"><scope>Vector</scope><name>isOwner</name></member>
      <member refid="classVector_1a30c203480dfd28a0f1fde5c08a68db94" prot="public" virt="non-virtual"><scope>Vector</scope><name>iterator</name></member>
      <member refid="classVectorBase_1af11110fc08a2da045aa939b8ef819d8c" prot="protected" virt="non-virtual"><scope>Vector</scope><name>makeAlias</name></member>
      <member refid="classVectorBase_1a48d4c06178c5db41cf94ba76c700c160" prot="protected" virt="non-virtual"><scope>Vector</scope><name>mData</name></member>
      <member refid="classVectorBase_1add8d0a21c1822e058803218d48770580" prot="protected" virt="non-virtual"><scope>Vector</scope><name>mEnd</name></member>
      <member refid="classVectorBase_1aa9f050339b20a7bb9250650397565502" prot="protected" virt="non-virtual"><scope>Vector</scope><name>mStart</name></member>
      <member refid="classVector_1a0d4512a03c868e81c1a0f3a3963eff3e" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator=</name></member>
      <member refid="classVector_1ae69496b42e6c67a78ff013d5cc050345" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator=</name></member>
      <member refid="classVectorBase_1a0f878c012131a702f4464e13291c2301" prot="public" virt="non-virtual" ambiguityscope="VectorBase::"><scope>Vector</scope><name>operator=</name></member>
      <member refid="classVectorBase_1a7764f9c76d4eb8e040baa0ae04b813b3" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1acb6769d7ac9b08634c366d92a6f4763f" prot="public" virt="non-virtual"><scope>Vector</scope><name>operator[]</name></member>
      <member refid="classVectorBase_1aeae2d4640f8b2f6e560e443095c931b6" prot="public" virt="non-virtual"><scope>Vector</scope><name>resize</name></member>
      <member refid="classVector_1aaf4c357405edb5a4eb77ec0a0f4773f7" prot="public" virt="non-virtual"><scope>Vector</scope><name>segment</name></member>
      <member refid="classVector_1a9e4c8d8612d3b49eade93dd5343c61c7" prot="public" virt="non-virtual"><scope>Vector</scope><name>segment</name></member>
      <member refid="classVectorBase_1a81dbffa5655a78ebfac279fc0852b2d8" prot="public" virt="non-virtual"><scope>Vector</scope><name>segmentCopyTo</name></member>
      <member refid="classVectorBase_1aff05cfb74562e6644e7d96e528cb0171" prot="protected" virt="non-virtual"><scope>Vector</scope><name>shiftMem</name></member>
      <member refid="classVectorBase_1a36a7ecb20b19da9fcfaaf41b1c1ca110" prot="public" virt="non-virtual"><scope>Vector</scope><name>size</name></member>
      <member refid="classVector_1aebbf63256eae2fe94aec339aee8d111d" prot="public" virt="non-virtual"><scope>Vector</scope><name>tail</name></member>
      <member refid="classVector_1a35bbc13c024fe22ebfa43f437594903a" prot="public" virt="non-virtual"><scope>Vector</scope><name>tail</name></member>
      <member refid="classVectorBase_1a72297a2b90886df4e121be05acb89dbe" prot="public" virt="non-virtual"><scope>Vector</scope><name>vConcat</name></member>
      <member refid="classVector_1afbdc34647940ea3ce74ecf7c59eca70a" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1afe2b08eb4e5e6c62a68b9917106217e0" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1ad0ed347210040680329535d7e4d16ae1" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1a0d5ef39ab94f93e30fad24051c395dfb" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1ad8e8c81950a9b01c9fa1741233c0e1a5" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVector_1a60278ebaf99a592297c1c23bbe07938f" prot="public" virt="non-virtual"><scope>Vector</scope><name>Vector</name></member>
      <member refid="classVectorBase_1a7c6c8ed8176b411636e4fa653f98a29b" prot="protected" virt="non-virtual"><scope>Vector</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1af7bdb68e08f619d29846929ea1885ea7" prot="protected" virt="non-virtual"><scope>Vector</scope><name>VectorBase</name></member>
      <member refid="classVectorBase_1a38ff214bd5f24507736a6f5d391ceb09" prot="protected" virt="non-virtual"><scope>Vector</scope><name>VectorDataType</name></member>
      <member refid="classVectorBase_1a531e6d9e1fcc0fd4339274206ba541d2" prot="protected" virt="non-virtual"><scope>Vector</scope><name>vInit</name></member>
      <member refid="classVectorBase_1ae71e18c840eb2e3f70c2778021684926" prot="public" virt="non-virtual"><scope>Vector</scope><name>~VectorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
